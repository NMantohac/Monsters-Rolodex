{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/App/App.component.jsx","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","event","setState","target","value","axios","get","data","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qYAGaA,G,MAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,yBAAKC,UAAU,kBACb,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,4BAAKJ,EAAQK,MACb,2BAAIL,EAAQM,UCJLC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,yBAAKP,UAAU,aACXO,EAASC,KAAI,SAAAT,GACT,OAAO,kBAAC,EAAD,CAAMU,IAAKV,EAAQI,GAAIJ,QAASA,UCLtCW,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,6BACE,2BACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,OCsCHG,G,kNAzCbC,MAAQ,CACNT,SAAU,GACVU,YAAa,I,EAgBfL,aAAe,SAACM,GACd,EAAKC,SAAS,CAAEF,YAAaC,EAAME,OAAOC,S,6MARjBC,IAAMC,IAAI,8C,gBAAzBC,E,EAAAA,KACRC,KAAKN,SAAS,CAAEZ,SAAUiB,I,mOAUpB,IAAD,EAC2BC,KAAKT,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZS,EAAmBnB,EAASoB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQK,KAAKwB,cAAcC,SAASZ,EAAYW,kBAGlD,OACE,yBAAK5B,UAAU,OACb,gDACA,kBAAC,EAAD,CACEW,YAAY,kBACZC,aAAca,KAAKb,eAErB,kBAAC,EAAD,CAAUL,SAAUmB,S,GApCVI,cCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b7dfd071.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = ({ monster }) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = ({ monsters }) => {\r\n  return (\r\n    <div className='card-list'>\r\n      { monsters.map(monster => {\r\n            return <Card key={monster.id} monster={monster} />\r\n          }) }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { CardList } from '../card-list/card-list.component';\nimport { SearchBox } from '../search-box/search-box.component';\nimport './App.styles.css';\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: '',\n  }\n\n  async componentDidMount() {\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    //   .then(response => response.json())\n    //   .then(users => this.setState({ monsters: users }));\n\n    try {\n      const { data } = await axios.get('https://jsonplaceholder.typicode.com/users')\n      this.setState({ monsters: data });\n    } catch (e) {\n      if (e) throw e;\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchField: event.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}